/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  DocsChangePasswordRequest,
  DocsCreateUserRequest,
  DocsSuccessResponse,
  DocsSuccessResponseWithoutData,
  DocsUpdateInfoRequest,
  DocsUpdateRatingRequest,
  GetUsers200,
  GetUsersId200,
  GetUsersParams,
  PatchUsersId200,
  PostUsersCreate201
} from './users.schemas';




  export const get = () => {
/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
const getUsers = <TData = AxiosResponse<GetUsers200>>(
    params?: GetUsersParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `http://217.114.11.158:8080/users`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const postUsersCreate = <TData = AxiosResponse<PostUsersCreate201>>(
    docsCreateUserRequest: DocsCreateUserRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `http://217.114.11.158:8080/users/create`,
      docsCreateUserRequest,options
    );
  }

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
 */
const getUsersId = <TData = AxiosResponse<GetUsersId200>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `http://217.114.11.158:8080/users/${id}`,options
    );
  }

/**
 * –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
 * @summary –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const deleteUsersId = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `http://217.114.11.158:8080/users/${id}`,options
    );
  }

/**
 * –ò–∑–º–µ–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (email, username –∏ —Ç.–¥.)
 * @summary –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const patchUsersId = <TData = AxiosResponse<PatchUsersId200>>(
    id: string,
    docsUpdateInfoRequest: DocsUpdateInfoRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `http://217.114.11.158:8080/users/${id}`,
      docsUpdateInfoRequest,options
    );
  }

/**
 * –ò–∑–º–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å—Ç–∞—Ä–æ–≥–æ –ø–∞—Ä–æ–ª—è
 * @summary –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
 */
const postUsersIdChangePassword = <TData = AxiosResponse<DocsSuccessResponseWithoutData>>(
    id: string,
    docsChangePasswordRequest: DocsChangePasswordRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `http://217.114.11.158:8080/users/${id}/change-password`,
      docsChangePasswordRequest,options
    );
  }

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
 */
const getUsersIdRating = <TData = AxiosResponse<DocsSuccessResponse>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `http://217.114.11.158:8080/users/${id}/rating`,options
    );
  }

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @summary –°–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
const postUsersIdToggleActive = <TData = AxiosResponse<DocsSuccessResponse>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `http://217.114.11.158:8080/users/${id}/toggle-active`,undefined,options
    );
  }

/**
 * –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∏–ª–∏ —É–º–µ–Ω—å—à–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–µ–ª–∏—á–∏–Ω—É
 * @summary –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
 */
const postUsersIdUpdateRating = <TData = AxiosResponse<DocsSuccessResponse>>(
    id: string,
    docsUpdateRatingRequest: DocsUpdateRatingRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `http://217.114.11.158:8080/users/${id}/update-rating`,
      docsUpdateRatingRequest,options
    );
  }

return {getUsers,postUsersCreate,getUsersId,deleteUsersId,patchUsersId,postUsersIdChangePassword,getUsersIdRating,postUsersIdToggleActive,postUsersIdUpdateRating}};
export type GetUsersResult = AxiosResponse<GetUsers200>
export type PostUsersCreateResult = AxiosResponse<PostUsersCreate201>
export type GetUsersIdResult = AxiosResponse<GetUsersId200>
export type DeleteUsersIdResult = AxiosResponse<void>
export type PatchUsersIdResult = AxiosResponse<PatchUsersId200>
export type PostUsersIdChangePasswordResult = AxiosResponse<DocsSuccessResponseWithoutData>
export type GetUsersIdRatingResult = AxiosResponse<DocsSuccessResponse>
export type PostUsersIdToggleActiveResult = AxiosResponse<DocsSuccessResponse>
export type PostUsersIdUpdateRatingResult = AxiosResponse<DocsSuccessResponse>
