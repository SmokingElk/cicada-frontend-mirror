/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Multiplayer Service API
 * API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã–º–∏ –ª–æ–±–±–∏
 * OpenAPI spec version: 1.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  DocsCreateGameRequest,
  DocsGame,
  DocsGameResponse,
  DocsJoinCustomGameRequest,
  DocsJoinGameRequest,
  GetGameInfoParams
} from './multiplayer.schemas';




  export const getMultiplayerServiceAPI = () => {
/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–æ–±–±–∏
 */
const postGameCreate = <TData = AxiosResponse<DocsGameResponse>>(
    docsCreateGameRequest: DocsCreateGameRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://cicada-chess.ru:8083/game/create`,
      docsCreateGameRequest,options
    );
  }

/**
 * @summary –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ª–æ–±–±–∏
 */
const postGameCreateCustom = <TData = AxiosResponse<DocsGameResponse>>(
    docsCreateGameRequest: DocsCreateGameRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://cicada-chess.ru:8083/game/create-custom`,
      docsCreateGameRequest,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ª–æ–±–±–∏
 */
const getGameInfo = <TData = AxiosResponse<DocsGame[]>>(
    params?: GetGameInfoParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://cicada-chess.ru:8083/game/info`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤–æ–π –∏–≥—Ä–µ
 */
const postGameJoin = <TData = AxiosResponse<DocsGameResponse>>(
    docsJoinGameRequest: DocsJoinGameRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://cicada-chess.ru:8083/game/join`,
      docsJoinGameRequest,options
    );
  }

/**
 * @summary –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ –∫–∞—Å—Ç–æ–º–Ω–æ–π –∏–≥—Ä–µ
 */
const postGameJoinCustom = <TData = AxiosResponse<DocsGameResponse>>(
    docsJoinCustomGameRequest: DocsJoinCustomGameRequest, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://cicada-chess.ru:8083/game/join-custom`,
      docsJoinCustomGameRequest,options
    );
  }

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ–±–±–∏
 */
const getGameId = <TData = AxiosResponse<DocsGame>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://cicada-chess.ru:8083/game/${id}`,options
    );
  }

return {postGameCreate,postGameCreateCustom,getGameInfo,postGameJoin,postGameJoinCustom,getGameId}};
export type PostGameCreateResult = AxiosResponse<DocsGameResponse>
export type PostGameCreateCustomResult = AxiosResponse<DocsGameResponse>
export type GetGameInfoResult = AxiosResponse<DocsGame[]>
export type PostGameJoinResult = AxiosResponse<DocsGameResponse>
export type PostGameJoinCustomResult = AxiosResponse<DocsGameResponse>
export type GetGameIdResult = AxiosResponse<DocsGame>
